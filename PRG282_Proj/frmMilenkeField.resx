<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="exitBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAQRJREFUSEu9llsKAjEMRe+6fIA/ugZRQVcluiBf2/H1o6BcIRrSDGYwNXBgTKY5
        U6YdC3xiBuAA4Arg8SPssQcwVf1fsXZuzmIlEs7EFrOZUMQp2kI2W4oy3sk3LhTZZC2KRC2KhOYOYAFg
        BODk1JljbQ7g5tQ1RUJDiUTPyHjdV3XK7PiwiE+rQ2SE1zqGzviwyGvI317u6IwPi8gZwMA01tENSEIi
        0iSLSkiR8GgSdTJFTRKJqKxIaNosBm+fhUVtljfvtePDIm5CCfvUVvbThuVnhQ2qf4IyKRK1+N8f384p
        ZLOhiEciW8hmLEuTRyJbzGIpEgkeiXhayXhn7MFe75k8AT3zOrnTVnxZAAAAAElFTkSuQmCC
</value>
  </data>
</root>