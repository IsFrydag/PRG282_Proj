<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="exitBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAQVJREFUSEu91msKwjAQBOCeywf4R88gKuipRA/k6zq+/ijoTOhCGia0xY0LH9RJ
        m221ramiWsEFnvD5Eec4wxIatQd1gIcdhOKVqB08LSBcohr0dASX36TNA+RACTIsQYbmDRuYwa3OYsw4
        toZXneXI0LCJ1QjiZtwegxWbxcemZGh4tnFZM+J2XFNQcxgZGjUhP6vsCmoOI8PYHSaQqyG0NSEZpnLN
        ujYhGaZyjQbg1qjtq+vaTIamz83AfdUcRoamz+3NfdUcRoaGD6FVetZps58eWL5WOEHxV5AnGZbwvz++
        UxSUcoCwJFKDnuYQiksitYOHLTSKSyKuVrwWkJyrvpKq+gI98zq5g5DOswAAAABJRU5ErkJggg==
</value>
  </data>
</root>