<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAAC5VJREFUeF7tXFlQVNsVtVKpfKRe5TP5ymeSn1eppFL5SyWVenEClEFbcGCwRRR8
        ji9PnyA00EwPlHmSbhoaZBAQmWVswAGZRQUVfc4T4oyoT5TeOevW6RSlx6aBFi6tq2pVUU3fs9fe99xz
        9tnn3F7wBV/weeNUzubfNmo81VXJbm3F+12Gc8Id3mhUi41pAQspI3AR6dUOYwVRTiMVSa69TRqvve25
        W3/DL/28Ycj0/K4kduVtjWqJ8Wi8gtoObaRL1bvoZuMeGj4ZSM+71BIfsL+v1++mjnwfKo1bSbpQu3e1
        6euKP9tANmV67MyPcnxZGO1EZ45soacdIfSyN9xi3mneS6y30qHI5a9as5WLeLO2j1ad7++PxCquM8fp
        YtVOYXCmwj4WfNYbx5sz16/mJmwXx3OUTvowh7HW7PU00q0WBmQ6HKzeSVmhS8dP5Hn/jZuyPRh0Xn5Z
        rKdcqNwhDMJM2Z7nQ8UHXB5yc7YFg97LVRey1HitYbfQeWvwBevRueHLKCNoMenD7MeLYpyfHEtbW3k8
        S/kNlzE/cSpH+TXree9+qv2v0HFr81lnKN1vDaDLNbuoUeNB7MZRWaLicot+81+5pPkDUql+UXxgxVBn
        wSahs7NBjLXH9UrSqpYaW7OUm7m0+YFajbu2lOV2L3vChM7NJq/VfS8FEXknlydvnC7f8Lsstd27uy3+
        QofmgoMsQc9mE9nJIuWfuEz5ojZtTVWDxl3oyFwSKdSROMVNLlOe6FepfpUdZv/2nox6n4nP2YqHTWpk
        0Ls7crnyQ1OmZzDWqyIH5MDTeRupPMGtj8uVH5A2nCnxE4qXA4dO7CNUemRZiGhuVv0Ss93j08FC8XLh
        4RhnatEplVy2fNCc4+mUF7lcKPpTEWPtsylWc1g6QyiHcdnyQf1B96z6jNmbfbHyQGWnIMqRHrephN8R
        8UzJFjoar7jGZcsHFUmufd1FvkLR1uYLlqCjJmjQKam98FvpsXzeFSr87vu8wdbl+dFOI1y2fFCy32UI
        FWWRaGsSxQOWa1JF8moa/ymb6FouNWi8pM9E33+f94/vI324wxsuWz7Ii1j2+m7zp83/nraH4PGjqtQ1
        9HZQJwUPfHdFTwU/OtFAxeQlM0xyutCl41y2fKALWTr+qC1IKNoavMrWtPowB2rN2UTGKzn/D56Jd05G
        SmUtPN6i600c6VJT+r5FxGXLB5qgxcapzoiWcOhEIJs111K22p6uG0I/CNxElsavmrQXvugOk2cAIQrj
        k0j0dIidOKyptcFL2ESxhd4MaoVBm8j+yj10jAVb1J6JGAY0QUuMXLZ8cDBwscUzoYjoaefLt1NLlhch
        n8xn6UlXMetNA+nCYIn4pCeBDkUsE7ZvojSJqB3GuGz5gA3M7x6esnwMHGVjFXbnqlJWY3dNGt9q0typ
        58hOGjodIwzQZMTEksFupMieiRhLC6Odn3LZ8kFu+PKfsWcrEv0+UXpH7lYSq6ALNf40ci5FGJDpMNX/
        P0KbJp4t/ZbK4hVXuGz5oDDa6dlVC/Y/UGjFhDBQtUcYgJlysgC2ZK+nY6lrqrls+aAsQTGIZZJItInY
        p8hjY9ul2gCh89bgZAEsT3SlJq1HCJctH2ArsUXnJRRtIgKMJFjkuLU4WQBz2Fh7Mlv5by5bPsBdLUtc
        JRRtIjaarhtChI5bi+YCiAIE9o9ReuOy5YO2zI3/wkwqEm4icrrXFzKEjluL5gKIk1842MQlywu4qzjP
        h7ssEg+mBiwkuvrhMsyaNBdAzMBHExRXuWT5IT/ScfQGu8si8SCcEzltTZoLoGxnYBOwbXi+bJtQPDjX
        AaxIcqN6rXsElys/YMery0xRNZ09wqYa3qcgqjRYk4tsg7LdDzGhOnVNw8mcDULxIA78jJy13qrjfb6+
        qJFsiGyDSGFaDyn/yeXKD9Wpq+uO6z8eQCTR99uihc5bg8MdsdIeicg2qGEpDA61c7nyQ3mS60Dn4c1C
        8SBKTQPVPwidtwZRzqozs7GFAHYUuP+Ry5UfDkUue4U6nkg82FvsRzVp64TOW4OVKWukVEVkGzwc7UzN
        WZ47uFx5oTlz/UoUCcyV1J+0B0vJ9M8XJy+OTpUvBzKkts1VxTsKfKgkdsVdLlleOHLA5X57vo9Q+ERi
        7/hUnq8wCDNhc7Y3NU+yFsd7J7kRy5iGddlctjzQqPGIxoaOJRVpvESDmXK484AwENPhvZM/SievLDlW
        glpkdpg9VSWvPt5f5PcVd2HugEdXF2JnvGOwrJgK9pdvkyrQo+dShQGZCp/1JlK22k46Gy2yJSIq59iY
        Z0POW5xnxDqeuzO7wNnjzOAlxum8woCEG3nZrdZIYWAs4bUmnPmzp3NmJg5zvNX0A2lVS6gsYdUgd2n2
        0KBdm5oZvNR4aQZvHaHX4NGrTXenh11xwiCJ+LA7jqpT1+G1BrpqZtY3x9EejMfrCIfh5+RRrjvorkcA
        kfdNtpn9MUqPMpu5WQLOxkU7qkr1oMsNH68XDtaF0NGE1aQPdZCuwbX9FduFbZsjsgFUpvF26JyeFTyh
        9/kH3hLCNuT5o1stCiTuPB55rEvzIh2lxwif4wgutjULY1yoKs2D7pyKobHLOon4G58dZv/D613YHMc1
        qO+hDbSFNtH2RFsi4noMHVi3y2ISAQxaL39sFbIeKW2G47HGa6rYAwHxNw4e4QUYjFn5UY4vGrQe+9MC
        Pqyc4OhFD0u4i2MV0soBxN/4zBS4iUQbaAttYnsUNibaR30SG1m4XrppEcteGzI9d3Pp8sKJHK+Fx9LW
        1hTtdx7GYfODgYv4S9P2b/FZTcqa2tZcpT3/+gJzpSdLiTZ4cwvQNmzAFmzCNo6cIGiYKAw6jz2yLOdP
        F9YO4GeHLwG0EL7x5/68KbEn2TOmrW9tVOsjRUjDmEtgrdFaAURbaBNtw4ZPUncSbHLz8xOb0nr/4B3f
        ccQtrHnURVVPygOnabvmAu3Nv06hpfcpsvKRVD3GaSlRYCwhrkUbaAtt+uddZzYGaD2z5RJUR25hhtEN
        8Z3F0MJlyR++Kb1/99rfdsYlqNa4MaGL/PNvUHTNU4o59uwDFqfvoKZMT2FwLCFm/JL0XcK2YRMB9Y7v
        YsGsNXrFtPX6pvbI98121cG7v2a9rJLdeaNfSh+Flw8LHZvIhKoblBvpLKUYogCZIxL43Ahniq++KWx7
        IsPLhsk35Qw5s0fdO66jQZX8QB75nwl+6X1L3NSGV177T1Po0SGhEx9jesUZFkQXatR6WvQLHnhsURLL
        jXKh9PKzwjY/xtDSIWI9kVyZ1q0p5+Xxix/eiT0x6HW7dJeEoi1hQvUtKs74njKD7aQXYZB0IxGe+Nsx
        OEvYpPXAu7/Sd+OrbwvbmozRNc9oV+ZFjJHGTcndUdyNucGGhE7tCjZBBB6+JRQ7VaJHFeVEU2GcB+nD
        naRzLGBOhJP0Gf6XVnFOeO1UGVR0h1YE19PG+M587s7swjuhM29VSOOUH1k5Uc20K0IbyTuxu4C7NTvA
        Y7sypEEaU0TC5hOR/qwMbiCfhO5I7t6nhV/y2W9WsPEDj4BI0HxkUNFtaUz0S+61425+Gvgl93+F2fa7
        rEGhkPnMnbqL5KZueoV0jLtrfShj22uRBogE2AI9Y04R87GSu2tdIItHN1eXPRAatwViQoSP25P7/8Ld
        th6wPEM2LzJsS9yc3EvM127utnWAxTjWk5Ysz+Y74SN8tWoBAlUV77hOoUFb5Ia4DpZgdx3m7s8cKEkF
        FE6+aLcVooLkqm4e5e7PDBhQ2cD60ZKULTK6+im5BNbRttS+r3kYpo+NiV3JytgOoSFbJktnyCexJ56H
        YfpAiRxVXpERW+b2jH6Uvnp5GKYP7DNgTBAZsWWims18H+ZhmD4UIY1jWHCLjNgyQ0vvETaqeBimD5TB
        oyofC43YMrFRxSaSmf+6h2PAMVruX/1Z0mlfzee7af8F8wILFvwPE8CGbF/XKU8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="button5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAQVJREFUSEu91msKwjAQBOCeywf4R88gKuipRA/k6zq+/ijoTOhCGia0xY0LH9RJ
        m221ramiWsEFnvD5Eec4wxIatQd1gIcdhOKVqB08LSBcohr0dASX36TNA+RACTIsQYbmDRuYwa3OYsw4
        toZXneXI0LCJ1QjiZtwegxWbxcemZGh4tnFZM+J2XFNQcxgZGjUhP6vsCmoOI8PYHSaQqyG0NSEZpnLN
        ujYhGaZyjQbg1qjtq+vaTIamz83AfdUcRoamz+3NfdUcRoaGD6FVetZps58eWL5WOEHxV5AnGZbwvz++
        UxSUcoCwJFKDnuYQiksitYOHLTSKSyKuVrwWkJyrvpKq+gI98zq5g5DOswAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="textBox1.Text" xml:space="preserve">
    <value>I'm a passionate and multi-faceted girl, full of energy and curiosity. Though some may underestimate me because of my blonde hair, I love proving them wrong with my determination and wide range of skills. My interests highlight my creative spirit and zest for life. I’m a passionate guitarist, an enthusiastic belly dancer, and a seriously committed gardener.</value>
  </data>
  <data name="textBox2.Text" xml:space="preserve">
    <value>If I’m not spending time with my chickens, coding on my laptop, playing guitar, in the dance studio, or out in my vegetable garden, you’ll likely find me outside walking with my four dogs. I embrace each of my passions with enthusiasm, finding joy in both creative pursuits and the little things of life.</value>
  </data>
</root>