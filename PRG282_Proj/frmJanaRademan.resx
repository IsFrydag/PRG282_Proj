<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAQRJREFUSEu9llsKAjEMRe+6fIA/ugZRQVcluiBf2/H1o6BcIRrSDGYwNXBgTKY5
        U6YdC3xiBuAA4Arg8SPssQcwVf1fsXZuzmIlEs7EFrOZUMQp2kI2W4oy3sk3LhTZZC2KRC2KhOYOYAFg
        BODk1JljbQ7g5tQ1RUJDiUTPyHjdV3XK7PiwiE+rQ2SE1zqGzviwyGvI317u6IwPi8gZwMA01tENSEIi
        0iSLSkiR8GgSdTJFTRKJqKxIaNosBm+fhUVtljfvtePDIm5CCfvUVvbThuVnhQ2qf4IyKRK1+N8f384p
        ZLOhiEciW8hmLEuTRyJbzGIpEgkeiXhayXhn7MFe75k8AT3zOrnTVnxZAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="textBox1.Text" xml:space="preserve">
    <value>I'm a passionate and multi-faceted girl, full of energy and curiosity. Though some may underestimate me because of my blonde hair, I love proving them wrong with my determination and wide range of skills. My interests highlight my creative spirit and zest for life. I’m a passionate guitarist, an enthusiastic belly dancer, and a seriously committed gardener.</value>
  </data>
  <data name="textBox2.Text" xml:space="preserve">
    <value>If I’m not spending time with my chickens, coding on my laptop, playing guitar, in the dance studio, or out in my vegetable garden, you’ll likely find me outside walking with my four dogs. I embrace each of my passions with enthusiasm, finding joy in both creative pursuits and the little things of life.</value>
  </data>
</root>